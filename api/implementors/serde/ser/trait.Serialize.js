(function() {var implementors = {};
implementors["erased_serde"] = [{"text":"impl&lt;'erased&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for dyn <a class=\"trait\" href=\"erased_serde/trait.Serialize.html\" title=\"trait erased_serde::Serialize\">Serialize</a> + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for dyn <a class=\"trait\" href=\"erased_serde/trait.Serialize.html\" title=\"trait erased_serde::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for dyn <a class=\"trait\" href=\"erased_serde/trait.Serialize.html\" title=\"trait erased_serde::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'erased","synthetic":false,"types":[]},{"text":"impl&lt;'erased&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for dyn <a class=\"trait\" href=\"erased_serde/trait.Serialize.html\" title=\"trait erased_serde::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'erased","synthetic":false,"types":[]}];
implementors["hashbrown"] = [{"text":"impl&lt;K, V, H&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","synthetic":false,"types":["hashbrown::map::HashMap"]},{"text":"impl&lt;T, H&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, H&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a>,&nbsp;</span>","synthetic":false,"types":["hashbrown::set::HashSet"]}];
implementors["heapless"] = [{"text":"impl&lt;T, KIND, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/binary_heap/struct.BinaryHeap.html\" title=\"struct heapless::binary_heap::BinaryHeap\">BinaryHeap</a>&lt;T, KIND, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;KIND: <a class=\"trait\" href=\"heapless/binary_heap/trait.Kind.html\" title=\"trait heapless::binary_heap::Kind\">BinaryHeapKind</a>,&nbsp;</span>","synthetic":false,"types":["heapless::binary_heap::BinaryHeap"]},{"text":"impl&lt;T, S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/struct.IndexSet.html\" title=\"struct heapless::IndexSet\">IndexSet</a>&lt;T, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"hash32/trait.Hash.html\" title=\"trait hash32::Hash\">Hash</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"hash32/trait.BuildHasher.html\" title=\"trait hash32::BuildHasher\">BuildHasher</a>,&nbsp;</span>","synthetic":false,"types":["heapless::indexset::IndexSet"]},{"text":"impl&lt;T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/struct.Vec.html\" title=\"struct heapless::Vec\">Vec</a>&lt;T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["heapless::vec::Vec"]},{"text":"impl&lt;K, V, S, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/struct.IndexMap.html\" title=\"struct heapless::IndexMap\">IndexMap</a>&lt;K, V, S, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"hash32/trait.Hash.html\" title=\"trait hash32::Hash\">Hash</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: <a class=\"trait\" href=\"hash32/trait.BuildHasher.html\" title=\"trait hash32::BuildHasher\">BuildHasher</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["heapless::indexmap::IndexMap"]},{"text":"impl&lt;K, V, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/struct.LinearMap.html\" title=\"struct heapless::LinearMap\">LinearMap</a>&lt;K, V, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["heapless::linear_map::LinearMap"]},{"text":"impl&lt;const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"heapless/struct.String.html\" title=\"struct heapless::String\">String</a>&lt;N&gt;","synthetic":false,"types":["heapless::string::String"]}];
implementors["intervaltree"] = [{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"intervaltree/struct.Element.html\" title=\"struct intervaltree::Element\">Element</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["intervaltree::Element"]},{"text":"impl&lt;K, V&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"intervaltree/struct.IntervalTree.html\" title=\"struct intervaltree::IntervalTree\">IntervalTree</a>&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["intervaltree::IntervalTree"]}];
implementors["libafl"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/core_affinity/struct.CoreId.html\" title=\"struct libafl::bolts::core_affinity::CoreId\">CoreId</a>","synthetic":false,"types":["libafl::bolts::core_affinity::CoreId"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/core_affinity/struct.Cores.html\" title=\"struct libafl::bolts::core_affinity::Cores\">Cores</a>","synthetic":false,"types":["libafl::bolts::core_affinity::Cores"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/llmp/enum.TcpRequest.html\" title=\"enum libafl::bolts::llmp::TcpRequest\">TcpRequest</a>","synthetic":false,"types":["libafl::bolts::llmp::TcpRequest"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/llmp/struct.TcpRemoteNewMessage.html\" title=\"struct libafl::bolts::llmp::TcpRemoteNewMessage\">TcpRemoteNewMessage</a>","synthetic":false,"types":["libafl::bolts::llmp::TcpRemoteNewMessage"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/llmp/enum.TcpResponse.html\" title=\"enum libafl::bolts::llmp::TcpResponse\">TcpResponse</a>","synthetic":false,"types":["libafl::bolts::llmp::TcpResponse"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/llmp/struct.LlmpDescription.html\" title=\"struct libafl::bolts::llmp::LlmpDescription\">LlmpDescription</a>","synthetic":false,"types":["libafl::bolts::llmp::LlmpDescription"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/llmp/struct.LlmpClientDescription.html\" title=\"struct libafl::bolts::llmp::LlmpClientDescription\">LlmpClientDescription</a>","synthetic":false,"types":["libafl::bolts::llmp::LlmpClientDescription"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/os/unix_shmem_server/enum.ServedShMemRequest.html\" title=\"enum libafl::bolts::os::unix_shmem_server::ServedShMemRequest\">ServedShMemRequest</a>","synthetic":false,"types":["libafl::bolts::os::unix_shmem_server::ServedShMemRequest"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/ownedref/enum.OwnedRef.html\" title=\"enum libafl::bolts::ownedref::OwnedRef\">OwnedRef</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["libafl::bolts::ownedref::OwnedRef"]},{"text":"impl&lt;'a, T:&nbsp;'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/ownedref/enum.OwnedRefMut.html\" title=\"enum libafl::bolts::ownedref::OwnedRefMut\">OwnedRefMut</a>&lt;'a, T&gt;","synthetic":false,"types":["libafl::bolts::ownedref::OwnedRefMut"]},{"text":"impl&lt;'a, T:&nbsp;'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/ownedref/struct.OwnedSlice.html\" title=\"struct libafl::bolts::ownedref::OwnedSlice\">OwnedSlice</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["libafl::bolts::ownedref::OwnedSlice"]},{"text":"impl&lt;'a, T:&nbsp;'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/ownedref/enum.OwnedSliceMutInner.html\" title=\"enum libafl::bolts::ownedref::OwnedSliceMutInner\">OwnedSliceMutInner</a>&lt;'a, T&gt;","synthetic":false,"types":["libafl::bolts::ownedref::OwnedSliceMutInner"]},{"text":"impl&lt;'a, T:&nbsp;'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/ownedref/struct.OwnedSliceMut.html\" title=\"struct libafl::bolts::ownedref::OwnedSliceMut\">OwnedSliceMut</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["libafl::bolts::ownedref::OwnedSliceMut"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/ownedref/enum.OwnedPtr.html\" title=\"enum libafl::bolts::ownedref::OwnedPtr\">OwnedPtr</a>&lt;T&gt;","synthetic":false,"types":["libafl::bolts::ownedref::OwnedPtr"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/bolts/ownedref/enum.OwnedPtrMut.html\" title=\"enum libafl::bolts::ownedref::OwnedPtrMut\">OwnedPtrMut</a>&lt;T&gt;","synthetic":false,"types":["libafl::bolts::ownedref::OwnedPtrMut"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/rands/struct.Xoshiro256StarRand.html\" title=\"struct libafl::bolts::rands::Xoshiro256StarRand\">Xoshiro256StarRand</a>","synthetic":false,"types":["libafl::bolts::rands::Xoshiro256StarRand"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/rands/struct.XorShift64Rand.html\" title=\"struct libafl::bolts::rands::XorShift64Rand\">XorShift64Rand</a>","synthetic":false,"types":["libafl::bolts::rands::XorShift64Rand"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/rands/struct.Lehmer64Rand.html\" title=\"struct libafl::bolts::rands::Lehmer64Rand\">Lehmer64Rand</a>","synthetic":false,"types":["libafl::bolts::rands::Lehmer64Rand"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/rands/struct.RomuTrioRand.html\" title=\"struct libafl::bolts::rands::RomuTrioRand\">RomuTrioRand</a>","synthetic":false,"types":["libafl::bolts::rands::RomuTrioRand"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/rands/struct.RomuDuoJrRand.html\" title=\"struct libafl::bolts::rands::RomuDuoJrRand\">RomuDuoJrRand</a>","synthetic":false,"types":["libafl::bolts::rands::RomuDuoJrRand"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/serdeany/struct.Wrap.html\" title=\"struct libafl::bolts::serdeany::Wrap\">Wrap</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"erased_serde/ser/trait.Serialize.html\" title=\"trait erased_serde::ser::Serialize\">Serialize</a> + 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,&nbsp;</span>","synthetic":false,"types":["libafl::bolts::serdeany::Wrap"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/serdeany/serdeany_registry/struct.SerdeAnyMap.html\" title=\"struct libafl::bolts::serdeany::serdeany_registry::SerdeAnyMap\">SerdeAnyMap</a>","synthetic":false,"types":["libafl::bolts::serdeany::serdeany_registry::SerdeAnyMap"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/serdeany/serdeany_registry/struct.NamedSerdeAnyMap.html\" title=\"struct libafl::bolts::serdeany::serdeany_registry::NamedSerdeAnyMap\">NamedSerdeAnyMap</a>","synthetic":false,"types":["libafl::bolts::serdeany::serdeany_registry::NamedSerdeAnyMap"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for dyn <a class=\"trait\" href=\"libafl/bolts/serdeany/trait.SerdeAny.html\" title=\"trait libafl::bolts::serdeany::SerdeAny\">SerdeAny</a>","synthetic":false,"types":[]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/shmem/struct.ShMemDescription.html\" title=\"struct libafl::bolts::shmem::ShMemDescription\">ShMemDescription</a>","synthetic":false,"types":["libafl::bolts::shmem::ShMemDescription"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/bolts/shmem/struct.ShMemId.html\" title=\"struct libafl::bolts::shmem::ShMemId\">ShMemId</a>","synthetic":false,"types":["libafl::bolts::shmem::ShMemId"]},{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/testcase/struct.Testcase.html\" title=\"struct libafl::corpus::testcase::Testcase\">Testcase</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::corpus::testcase::Testcase"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/testcase/struct.SchedulerTestcaseMetaData.html\" title=\"struct libafl::corpus::testcase::SchedulerTestcaseMetaData\">SchedulerTestcaseMetaData</a>","synthetic":false,"types":["libafl::corpus::testcase::SchedulerTestcaseMetaData"]},{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/inmemory/struct.InMemoryCorpus.html\" title=\"struct libafl::corpus::inmemory::InMemoryCorpus\">InMemoryCorpus</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::corpus::inmemory::InMemoryCorpus"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/corpus/ondisk/enum.OnDiskMetadataFormat.html\" title=\"enum libafl::corpus::ondisk::OnDiskMetadataFormat\">OnDiskMetadataFormat</a>","synthetic":false,"types":["libafl::corpus::ondisk::OnDiskMetadataFormat"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/ondisk/struct.OnDiskMetadata.html\" title=\"struct libafl::corpus::ondisk::OnDiskMetadata\">OnDiskMetadata</a>&lt;'a&gt;","synthetic":false,"types":["libafl::corpus::ondisk::OnDiskMetadata"]},{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/ondisk/struct.OnDiskCorpus.html\" title=\"struct libafl::corpus::ondisk::OnDiskCorpus\">OnDiskCorpus</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::corpus::ondisk::OnDiskCorpus"]},{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/corpus/cached/struct.CachedOnDiskCorpus.html\" title=\"struct libafl::corpus::cached::CachedOnDiskCorpus\">CachedOnDiskCorpus</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::corpus::cached::CachedOnDiskCorpus"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/events/enum.LogSeverity.html\" title=\"enum libafl::events::LogSeverity\">LogSeverity</a>","synthetic":false,"types":["libafl::events::LogSeverity"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/events/enum.BrokerEventResult.html\" title=\"enum libafl::events::BrokerEventResult\">BrokerEventResult</a>","synthetic":false,"types":["libafl::events::BrokerEventResult"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/events/enum.EventConfig.html\" title=\"enum libafl::events::EventConfig\">EventConfig</a>","synthetic":false,"types":["libafl::events::EventConfig"]},{"text":"impl&lt;I&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/events/enum.Event.html\" title=\"enum libafl::events::Event\">Event</a>&lt;I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::events::Event"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/executors/enum.ExitKind.html\" title=\"enum libafl::executors::ExitKind\">ExitKind</a>","synthetic":false,"types":["libafl::executors::ExitKind"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/executors/enum.DiffExitKind.html\" title=\"enum libafl::executors::DiffExitKind\">DiffExitKind</a>","synthetic":false,"types":["libafl::executors::DiffExitKind"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/map/struct.MapIndexesMetadata.html\" title=\"struct libafl::feedbacks::map::MapIndexesMetadata\">MapIndexesMetadata</a>","synthetic":false,"types":["libafl::feedbacks::map::MapIndexesMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/map/struct.MapNoveltiesMetadata.html\" title=\"struct libafl::feedbacks::map::MapNoveltiesMetadata\">MapNoveltiesMetadata</a>","synthetic":false,"types":["libafl::feedbacks::map::MapNoveltiesMetadata"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/map/struct.MapFeedbackMetadata.html\" title=\"struct libafl::feedbacks::map::MapFeedbackMetadata\">MapFeedbackMetadata</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::feedbacks::map::MapFeedbackMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/feedbacks/differential/enum.DiffResult.html\" title=\"enum libafl::feedbacks::differential::DiffResult\">DiffResult</a>","synthetic":false,"types":["libafl::feedbacks::differential::DiffResult"]},{"text":"impl&lt;F, O1, O2&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/differential/struct.DiffFeedback.html\" title=\"struct libafl::feedbacks::differential::DiffFeedback\">DiffFeedback</a>&lt;F, O1, O2&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>O1, <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;</a>O2) -&gt; <a class=\"enum\" href=\"libafl/feedbacks/differential/enum.DiffResult.html\" title=\"enum libafl::feedbacks::differential::DiffResult\">DiffResult</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;F: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["libafl::feedbacks::differential::DiffFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/new_hash_feedback/struct.NewHashFeedbackMetadata.html\" title=\"struct libafl::feedbacks::new_hash_feedback::NewHashFeedbackMetadata\">NewHashFeedbackMetadata</a>","synthetic":false,"types":["libafl::feedbacks::new_hash_feedback::NewHashFeedbackMetadata"]},{"text":"impl&lt;O&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/new_hash_feedback/struct.NewHashFeedback.html\" title=\"struct libafl::feedbacks::new_hash_feedback::NewHashFeedback\">NewHashFeedback</a>&lt;O&gt;","synthetic":false,"types":["libafl::feedbacks::new_hash_feedback::NewHashFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/struct.CrashFeedback.html\" title=\"struct libafl::feedbacks::CrashFeedback\">CrashFeedback</a>","synthetic":false,"types":["libafl::feedbacks::CrashFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/struct.TimeoutFeedback.html\" title=\"struct libafl::feedbacks::TimeoutFeedback\">TimeoutFeedback</a>","synthetic":false,"types":["libafl::feedbacks::TimeoutFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/struct.TimeFeedback.html\" title=\"struct libafl::feedbacks::TimeFeedback\">TimeFeedback</a>","synthetic":false,"types":["libafl::feedbacks::TimeFeedback"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/feedbacks/struct.ListFeedback.html\" title=\"struct libafl::feedbacks::ListFeedback\">ListFeedback</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::feedbacks::ListFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/feedbacks/enum.ConstFeedback.html\" title=\"enum libafl::feedbacks::ConstFeedback\">ConstFeedback</a>","synthetic":false,"types":["libafl::feedbacks::ConstFeedback"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/generators/gramatron/struct.Trigger.html\" title=\"struct libafl::generators::gramatron::Trigger\">Trigger</a>","synthetic":false,"types":["libafl::generators::gramatron::Trigger"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/generators/gramatron/struct.Automaton.html\" title=\"struct libafl::generators::gramatron::Automaton\">Automaton</a>","synthetic":false,"types":["libafl::generators::gramatron::Automaton"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/bytes/struct.BytesInput.html\" title=\"struct libafl::inputs::bytes::BytesInput\">BytesInput</a>","synthetic":false,"types":["libafl::inputs::bytes::BytesInput"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/encoded/struct.EncodedInput.html\" title=\"struct libafl::inputs::encoded::EncodedInput\">EncodedInput</a>","synthetic":false,"types":["libafl::inputs::encoded::EncodedInput"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/gramatron/struct.Terminal.html\" title=\"struct libafl::inputs::gramatron::Terminal\">Terminal</a>","synthetic":false,"types":["libafl::inputs::gramatron::Terminal"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/gramatron/struct.GramatronInput.html\" title=\"struct libafl::inputs::gramatron::GramatronInput\">GramatronInput</a>","synthetic":false,"types":["libafl::inputs::gramatron::GramatronInput"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/inputs/generalized/enum.GeneralizedItem.html\" title=\"enum libafl::inputs::generalized::GeneralizedItem\">GeneralizedItem</a>","synthetic":false,"types":["libafl::inputs::generalized::GeneralizedItem"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/generalized/struct.GeneralizedInput.html\" title=\"struct libafl::inputs::generalized::GeneralizedInput\">GeneralizedInput</a>","synthetic":false,"types":["libafl::inputs::generalized::GeneralizedInput"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/inputs/struct.NopInput.html\" title=\"struct libafl::inputs::NopInput\">NopInput</a>","synthetic":false,"types":["libafl::inputs::NopInput"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/monitors/enum.UserStats.html\" title=\"enum libafl::monitors::UserStats\">UserStats</a>","synthetic":false,"types":["libafl::monitors::UserStats"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/monitors/struct.ClientPerfMonitor.html\" title=\"struct libafl::monitors::ClientPerfMonitor\">ClientPerfMonitor</a>","synthetic":false,"types":["libafl::monitors::ClientPerfMonitor"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/monitors/enum.PerfFeature.html\" title=\"enum libafl::monitors::PerfFeature\">PerfFeature</a>","synthetic":false,"types":["libafl::monitors::PerfFeature"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/mutators/scheduled/struct.LogMutationMetadata.html\" title=\"struct libafl::mutators::scheduled::LogMutationMetadata\">LogMutationMetadata</a>","synthetic":false,"types":["libafl::mutators::scheduled::LogMutationMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/mutators/token_mutations/struct.Tokens.html\" title=\"struct libafl::mutators::token_mutations::Tokens\">Tokens</a>","synthetic":false,"types":["libafl::mutators::token_mutations::Tokens"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/mutators/mopt_mutator/struct.MOpt.html\" title=\"struct libafl::mutators::mopt_mutator::MOpt\">MOpt</a>","synthetic":false,"types":["libafl::mutators::mopt_mutator::MOpt"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/mutators/mopt_mutator/enum.MOptMode.html\" title=\"enum libafl::mutators::mopt_mutator::MOptMode\">MOptMode</a>","synthetic":false,"types":["libafl::mutators::mopt_mutator::MOptMode"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/mutators/gramatron/struct.GramatronIdxMapMetadata.html\" title=\"struct libafl::mutators::gramatron::GramatronIdxMapMetadata\">GramatronIdxMapMetadata</a>","synthetic":false,"types":["libafl::mutators::gramatron::GramatronIdxMapMetadata"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.StdMapObserver.html\" title=\"struct libafl::observers::map::StdMapObserver\">StdMapObserver</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::StdMapObserver"]},{"text":"impl&lt;'a, T, const N:&nbsp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.ConstMapObserver.html\" title=\"struct libafl::observers::map::ConstMapObserver\">ConstMapObserver</a>&lt;'a, T, N&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::ConstMapObserver"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.VariableMapObserver.html\" title=\"struct libafl::observers::map::VariableMapObserver\">VariableMapObserver</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::VariableMapObserver"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.HitcountsMapObserver.html\" title=\"struct libafl::observers::map::HitcountsMapObserver\">HitcountsMapObserver</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::HitcountsMapObserver"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.MultiMapObserver.html\" title=\"struct libafl::observers::map::MultiMapObserver\">MultiMapObserver</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::MultiMapObserver"]},{"text":"impl&lt;T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/map/struct.OwnedMapObserver.html\" title=\"struct libafl::observers::map::OwnedMapObserver\">OwnedMapObserver</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + 'static + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::map::OwnedMapObserver"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/observers/cmp/enum.CmpValues.html\" title=\"enum libafl::observers::cmp::CmpValues\">CmpValues</a>","synthetic":false,"types":["libafl::observers::cmp::CmpValues"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/cmp/struct.CmpValuesMetadata.html\" title=\"struct libafl::observers::cmp::CmpValuesMetadata\">CmpValuesMetadata</a>","synthetic":false,"types":["libafl::observers::cmp::CmpValuesMetadata"]},{"text":"impl&lt;'a, CM&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/cmp/struct.StdCmpObserver.html\" title=\"struct libafl::observers::cmp::StdCmpObserver\">StdCmpObserver</a>&lt;'a, CM&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;CM: <a class=\"trait\" href=\"libafl/observers/cmp/trait.CmpMap.html\" title=\"trait libafl::observers::cmp::CmpMap\">CmpMap</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;CM: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::cmp::StdCmpObserver"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/observers/stacktrace/enum.HarnessType.html\" title=\"enum libafl::observers::stacktrace::HarnessType\">HarnessType</a>","synthetic":false,"types":["libafl::observers::stacktrace::HarnessType"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/stacktrace/struct.BacktraceObserver.html\" title=\"struct libafl::observers::stacktrace::BacktraceObserver\">BacktraceObserver</a>&lt;'a&gt;","synthetic":false,"types":["libafl::observers::stacktrace::BacktraceObserver"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/stacktrace/struct.ASANBacktraceObserver.html\" title=\"struct libafl::observers::stacktrace::ASANBacktraceObserver\">ASANBacktraceObserver</a>","synthetic":false,"types":["libafl::observers::stacktrace::ASANBacktraceObserver"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/concolic/struct.Location.html\" title=\"struct libafl::observers::concolic::Location\">Location</a>","synthetic":false,"types":["libafl::observers::concolic::Location"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/observers/concolic/enum.SymExpr.html\" title=\"enum libafl::observers::concolic::SymExpr\">SymExpr</a>","synthetic":false,"types":["libafl::observers::concolic::SymExpr"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/concolic/struct.ConcolicMetadata.html\" title=\"struct libafl::observers::concolic::ConcolicMetadata\">ConcolicMetadata</a>","synthetic":false,"types":["libafl::observers::concolic::metadata::ConcolicMetadata"]},{"text":"impl&lt;'map&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/concolic/struct.ConcolicObserver.html\" title=\"struct libafl::observers::concolic::ConcolicObserver\">ConcolicObserver</a>&lt;'map&gt;","synthetic":false,"types":["libafl::observers::concolic::observer::ConcolicObserver"]},{"text":"impl&lt;I:&nbsp;'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, S:&nbsp;'static + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/owned/struct.ObserversOwnedMap.html\" title=\"struct libafl::observers::owned::ObserversOwnedMap\">ObserversOwnedMap</a>&lt;I, S&gt;","synthetic":false,"types":["libafl::observers::owned::ObserversOwnedMap"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/struct.TimeObserver.html\" title=\"struct libafl::observers::TimeObserver\">TimeObserver</a>","synthetic":false,"types":["libafl::observers::TimeObserver"]},{"text":"impl&lt;'a, T&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/observers/struct.ListObserver.html\" title=\"struct libafl::observers::ListObserver\">ListObserver</a>&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,&nbsp;</span>","synthetic":false,"types":["libafl::observers::ListObserver"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/probabilistic_sampling/struct.ProbabilityMetadata.html\" title=\"struct libafl::schedulers::probabilistic_sampling::ProbabilityMetadata\">ProbabilityMetadata</a>","synthetic":false,"types":["libafl::schedulers::probabilistic_sampling::ProbabilityMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/accounting/struct.AccountingIndexesMetadata.html\" title=\"struct libafl::schedulers::accounting::AccountingIndexesMetadata\">AccountingIndexesMetadata</a>","synthetic":false,"types":["libafl::schedulers::accounting::AccountingIndexesMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/accounting/struct.TopAccountingMetadata.html\" title=\"struct libafl::schedulers::accounting::TopAccountingMetadata\">TopAccountingMetadata</a>","synthetic":false,"types":["libafl::schedulers::accounting::TopAccountingMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/minimizer/struct.IsFavoredMetadata.html\" title=\"struct libafl::schedulers::minimizer::IsFavoredMetadata\">IsFavoredMetadata</a>","synthetic":false,"types":["libafl::schedulers::minimizer::IsFavoredMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/minimizer/struct.TopRatedsMetadata.html\" title=\"struct libafl::schedulers::minimizer::TopRatedsMetadata\">TopRatedsMetadata</a>","synthetic":false,"types":["libafl::schedulers::minimizer::TopRatedsMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/weighted/struct.WeightedScheduleMetadata.html\" title=\"struct libafl::schedulers::weighted::WeightedScheduleMetadata\">WeightedScheduleMetadata</a>","synthetic":false,"types":["libafl::schedulers::weighted::WeightedScheduleMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/schedulers/powersched/struct.SchedulerMetadata.html\" title=\"struct libafl::schedulers::powersched::SchedulerMetadata\">SchedulerMetadata</a>","synthetic":false,"types":["libafl::schedulers::powersched::SchedulerMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"libafl/schedulers/powersched/enum.PowerSchedule.html\" title=\"enum libafl::schedulers::powersched::PowerSchedule\">PowerSchedule</a>","synthetic":false,"types":["libafl::schedulers::powersched::PowerSchedule"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/stages/generalization/struct.GeneralizedIndexesMetadata.html\" title=\"struct libafl::stages::generalization::GeneralizedIndexesMetadata\">GeneralizedIndexesMetadata</a>","synthetic":false,"types":["libafl::stages::generalization::GeneralizedIndexesMetadata"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/stages/sync/struct.SyncFromDiskMetadata.html\" title=\"struct libafl::stages::sync::SyncFromDiskMetadata\">SyncFromDiskMetadata</a>","synthetic":false,"types":["libafl::stages::sync::SyncFromDiskMetadata"]},{"text":"impl&lt;C, I, R, SC&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libafl/state/struct.StdState.html\" title=\"struct libafl::state::StdState\">StdState</a>&lt;C, I, R, SC&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"libafl/corpus/trait.Corpus.html\" title=\"trait libafl::corpus::Corpus\">Corpus</a>&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: <a class=\"trait\" href=\"libafl/inputs/trait.Input.html\" title=\"trait libafl::inputs::Input\">Input</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;R: <a class=\"trait\" href=\"libafl/bolts/rands/trait.Rand.html\" title=\"trait libafl::bolts::rands::Rand\">Rand</a>,<br>&nbsp;&nbsp;&nbsp;&nbsp;SC: <a class=\"trait\" href=\"libafl/corpus/trait.Corpus.html\" title=\"trait libafl::corpus::Corpus\">Corpus</a>&lt;I&gt;,<br>&nbsp;&nbsp;&nbsp;&nbsp;C: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + for&lt;'a&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'a&gt;,&nbsp;</span>","synthetic":false,"types":["libafl::state::StdState"]}];
implementors["log"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"log/enum.Level.html\" title=\"enum log::Level\">Level</a>","synthetic":false,"types":["log::Level"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"log/enum.LevelFilter.html\" title=\"enum log::LevelFilter\">LevelFilter</a>","synthetic":false,"types":["log::LevelFilter"]}];
implementors["puffin"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/agent/struct.AgentName.html\" title=\"struct puffin::agent::AgentName\">AgentName</a>","synthetic":false,"types":["puffin::agent::AgentName"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"puffin/agent/enum.AgentType.html\" title=\"enum puffin::agent::AgentType\">AgentType</a>","synthetic":false,"types":["puffin::agent::AgentType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/agent/struct.AgentDescriptor.html\" title=\"struct puffin::agent::AgentDescriptor\">AgentDescriptor</a>","synthetic":false,"types":["puffin::agent::AgentDescriptor"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"puffin/agent/enum.TLSVersion.html\" title=\"enum puffin::agent::TLSVersion\">TLSVersion</a>","synthetic":false,"types":["puffin::agent::TLSVersion"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/algebra/atoms/struct.Variable.html\" title=\"struct puffin::algebra::atoms::Variable\">Variable</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["puffin::algebra::atoms::Variable"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/algebra/atoms/struct.Function.html\" title=\"struct puffin::algebra::atoms::Function\">Function</a>","synthetic":false,"types":["puffin::algebra::atoms::Function"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/algebra/dynamic_function/struct.DynamicFunctionShape.html\" title=\"struct puffin::algebra::dynamic_function::DynamicFunctionShape\">DynamicFunctionShape</a>","synthetic":false,"types":["puffin::algebra::dynamic_function::DynamicFunctionShape"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/algebra/dynamic_function/struct.TypeShape.html\" title=\"struct puffin::algebra::dynamic_function::TypeShape\">TypeShape</a>","synthetic":false,"types":["puffin::algebra::dynamic_function::TypeShape"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"puffin/algebra/error/enum.FnError.html\" title=\"enum puffin::algebra::error::FnError\">FnError</a>","synthetic":false,"types":["puffin::algebra::error::FnError"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"puffin/algebra/term/enum.Term.html\" title=\"enum puffin::algebra::term::Term\">Term</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>,&nbsp;</span>","synthetic":false,"types":["puffin::algebra::term::Term"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/algebra/struct.AnyMatcher.html\" title=\"struct puffin::algebra::AnyMatcher\">AnyMatcher</a>","synthetic":false,"types":["puffin::algebra::AnyMatcher"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/put/struct.PutName.html\" title=\"struct puffin::put::PutName\">PutName</a>","synthetic":false,"types":["puffin::put::PutName"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/put/struct.PutOptions.html\" title=\"struct puffin::put::PutOptions\">PutOptions</a>","synthetic":false,"types":["puffin::put::PutOptions"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/put/struct.PutDescriptor.html\" title=\"struct puffin::put::PutDescriptor\">PutDescriptor</a>","synthetic":false,"types":["puffin::put::PutDescriptor"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/trace/struct.Query.html\" title=\"struct puffin::trace::Query\">Query</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["puffin::trace::Query"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/trace/struct.Trace.html\" title=\"struct puffin::trace::Trace\">Trace</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>,&nbsp;</span>","synthetic":false,"types":["puffin::trace::Trace"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/trace/struct.Step.html\" title=\"struct puffin::trace::Step\">Step</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>,&nbsp;</span>","synthetic":false,"types":["puffin::trace::Step"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"puffin/trace/enum.Action.html\" title=\"enum puffin::trace::Action\">Action</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>,&nbsp;</span>","synthetic":false,"types":["puffin::trace::Action"]},{"text":"impl&lt;M&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/trace/struct.OutputAction.html\" title=\"struct puffin::trace::OutputAction\">OutputAction</a>&lt;M&gt;","synthetic":false,"types":["puffin::trace::OutputAction"]},{"text":"impl&lt;M:&nbsp;<a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"puffin/trace/struct.InputAction.html\" title=\"struct puffin::trace::InputAction\">InputAction</a>&lt;M&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;M: <a class=\"trait\" href=\"puffin/algebra/trait.Matcher.html\" title=\"trait puffin::algebra::Matcher\">Matcher</a>,&nbsp;</span>","synthetic":false,"types":["puffin::trace::InputAction"]}];
implementors["serde"] = [];
implementors["serde_json"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>, <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>&gt;","synthetic":false,"types":["serde_json::map::Map"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>","synthetic":false,"types":["serde_json::value::Value"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>","synthetic":false,"types":["serde_json::number::Number"]}];
implementors["serde_value"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_value/enum.Value.html\" title=\"enum serde_value::Value\">Value</a>","synthetic":false,"types":["serde_value::Value"]}];
implementors["serde_yaml"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_yaml/struct.Mapping.html\" title=\"struct serde_yaml::Mapping\">Mapping</a>","synthetic":false,"types":["serde_yaml::mapping::Mapping"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"serde_yaml/struct.Number.html\" title=\"struct serde_yaml::Number\">Number</a>","synthetic":false,"types":["serde_yaml::number::Number"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"serde_yaml/enum.Value.html\" title=\"enum serde_yaml::Value\">Value</a>","synthetic":false,"types":["serde_yaml::value::Value"]}];
implementors["tlspuffin"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/query/enum.TlsQueryMatcher.html\" title=\"enum tlspuffin::query::TlsQueryMatcher\">TlsQueryMatcher</a>","synthetic":false,"types":["tlspuffin::query::TlsQueryMatcher"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ProtocolVersion.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ProtocolVersion\">ProtocolVersion</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ProtocolVersion"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.HashAlgorithm.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::HashAlgorithm\">HashAlgorithm</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::HashAlgorithm"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.SignatureAlgorithm.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::SignatureAlgorithm\">SignatureAlgorithm</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::SignatureAlgorithm"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ClientCertificateType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ClientCertificateType\">ClientCertificateType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ClientCertificateType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.Compression.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::Compression\">Compression</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::Compression"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ContentType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ContentType\">ContentType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ContentType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.HandshakeType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::HandshakeType\">HandshakeType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::HandshakeType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.AlertLevel.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::AlertLevel\">AlertLevel</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::AlertLevel"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.AlertDescription.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::AlertDescription\">AlertDescription</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::AlertDescription"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.HeartbeatMessageType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::HeartbeatMessageType\">HeartbeatMessageType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::HeartbeatMessageType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ExtensionType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ExtensionType\">ExtensionType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ExtensionType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ServerNameType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ServerNameType\">ServerNameType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ServerNameType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.NamedCurve.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::NamedCurve\">NamedCurve</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::NamedCurve"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.NamedGroup.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::NamedGroup\">NamedGroup</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::NamedGroup"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.CipherSuite.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::CipherSuite\">CipherSuite</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::CipherSuite"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ECPointFormat.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ECPointFormat\">ECPointFormat</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ECPointFormat"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.HeartbeatMode.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::HeartbeatMode\">HeartbeatMode</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::HeartbeatMode"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.ECCurveType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::ECCurveType\">ECCurveType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::ECCurveType"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.SignatureScheme.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::SignatureScheme\">SignatureScheme</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::SignatureScheme"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.PSKKeyExchangeMode.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::PSKKeyExchangeMode\">PSKKeyExchangeMode</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::PSKKeyExchangeMode"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.KeyUpdateRequest.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::KeyUpdateRequest\">KeyUpdateRequest</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::KeyUpdateRequest"]},{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"enum\" href=\"tlspuffin/tls/rustls/msgs/enums/enum.CertificateStatusType.html\" title=\"enum tlspuffin::tls::rustls::msgs::enums::CertificateStatusType\">CertificateStatusType</a>","synthetic":false,"types":["tlspuffin::tls::rustls::msgs::enums::CertificateStatusType"]}];
implementors["uuid"] = [{"text":"impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"uuid/struct.Uuid.html\" title=\"struct uuid::Uuid\">Uuid</a>","synthetic":false,"types":["uuid::Uuid"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()