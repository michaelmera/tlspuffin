window.SIDEBAR_ITEMS = {"struct":[["ConstMapObserver","Use a const size to speedup `Feedback::is_interesting` when the user can know the size of the map at compile time."],["HitcountsIterableMapObserver","Map observer with hitcounts postprocessing Less optimized version for non-slice iterators. Slice-backed observers should use a [`HitcountsMapObserver`]."],["HitcountsMapObserver","Map observer with AFL-like hitcounts postprocessing"],["MapObserverSimpleIterator","A Simple iterator calling `MapObserver::get`"],["MapObserverSimpleIteratorMut","A Simple iterator calling `MapObserver::get_mut`"],["MultiMapObserver","The Multi Map Observer merge different maps into one observer"],["OwnedMapObserver","Exact copy of `StdMapObserver` that owns its map Used for python bindings"],["StdMapObserver","The Map Observer retrieves the state of a map, that will get updated by the target. A well-known example is the AFL-Style coverage map."],["VariableMapObserver","Overlooking a variable bitmap"]],"trait":[["MapObserver","A [`MapObserver`] observes the static map, as oftentimes used for AFL-like coverage information"]]};