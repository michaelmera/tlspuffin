window.SIDEBAR_ITEMS = {"mod":[["accounting","Coverage accounting corpus scheduler, more details at https://www.ndss-symposium.org/wp-content/uploads/2020/02/24422-paper.pdf"],["minimizer","The Minimizer schedulers are a family of corpus schedulers that feed the fuzzer with testcases only from a subset of the total corpus."],["powersched","The queue corpus scheduler for power schedules."],["probabilistic_sampling","Probabilistic sampling scheduler is a corpus scheduler that feeds the fuzzer with sampled item from the corpus."],["queue","The queue corpus scheduler implements an AFL-like queue mechanism"],["testcase_score","The `TestcaseScore` is an evaluator providing scores of corpus items."],["weighted","The queue corpus scheduler with weighted queue item selection from aflpp (`https://github.com/AFLplusplus/AFLplusplus/blob/1d4f1e48797c064ee71441ba555b29fc3f467983/src/afl-fuzz-queue.c#L32`) This queue corpus scheduler needs calibration stage."]],"struct":[["RandScheduler","Feed the fuzzer simpply with a random testcase on request"]],"trait":[["Scheduler","The scheduler define how the fuzzer requests a testcase from the corpus. It has hooks to corpus add/replace/remove to allow complex scheduling algorithms to collect data."]],"type":[["StdScheduler","A [`StdScheduler`] uses the default scheduler in `LibAFL` to schedule [`Testcase`]s. The current `Std` is a [`RandScheduler`], although this may change in the future, if another [`Scheduler`] delivers better results."]]};