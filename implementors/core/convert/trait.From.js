(function() {var implementors = {};
implementors["tlspuffin"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.60.0/std/primitive.i32.html\">i32</a>&gt; for <a class=\"enum\" href=\"tlspuffin/agent/enum.TLSVersion.html\" title=\"enum tlspuffin::agent::TLSVersion\">TLSVersion</a>","synthetic":false,"types":["tlspuffin::agent::TLSVersion"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/openssl/0.10/openssl/error/struct.ErrorStack.html\" title=\"struct openssl::error::ErrorStack\">ErrorStack</a>&gt; for <a class=\"enum\" href=\"tlspuffin/error/enum.Error.html\" title=\"enum tlspuffin::error::Error\">Error</a>","synthetic":false,"types":["tlspuffin::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>&gt; for <a class=\"enum\" href=\"tlspuffin/error/enum.Error.html\" title=\"enum tlspuffin::error::Error\">Error</a>","synthetic":false,"types":["tlspuffin::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.60.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"tlspuffin/error/enum.Error.html\" title=\"enum tlspuffin::error::Error\">Error</a>","synthetic":false,"types":["tlspuffin::error::Error"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Error&gt; for <a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>","synthetic":false,"types":["tlspuffin::tls::error::FnError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.60.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for <a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>","synthetic":false,"types":["tlspuffin::tls::error::FnError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;MessageError&gt; for <a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>","synthetic":false,"types":["tlspuffin::tls::error::FnError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://briansmith.org/rustdoc/ring/error/struct.Unspecified.html\" title=\"struct ring::error::Unspecified\">Unspecified</a>&gt; for <a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>","synthetic":false,"types":["tlspuffin::tls::error::FnError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.60.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://briansmith.org/rustdoc/webpki/name/dns_name/struct.InvalidDnsNameError.html\" title=\"struct webpki::name::dns_name::InvalidDnsNameError\">InvalidDnsNameError</a>&gt; for <a class=\"enum\" href=\"tlspuffin/tls/error/enum.FnError.html\" title=\"enum tlspuffin::tls::error::FnError\">FnError</a>","synthetic":false,"types":["tlspuffin::tls::error::FnError"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()